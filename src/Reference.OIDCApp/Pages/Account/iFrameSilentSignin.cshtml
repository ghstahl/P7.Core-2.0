@page
@model Reference.OIDCApp.Pages.Account.iFrameSilentSigninModel
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>iFrameSilentSignin</title>
    <script type="text/javascript" src="~/lib/ternarylabs-porthole/src/porthole.min.js"></script>
</head>
<body>
    <button id='signin'>signin</button>
    <p id="received-message">I've heard nothing yet</p>
    <form style="display: none;" id="loginform" target="guestFrame" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" asp-route-errorUrl="@Model.ErrorUrl" asp-route-prompt="@Model.Prompt" method="post" class="form-horizontal">
        <div>
            <p>
                <input type="text" name="provider" value="@Model.Provider" />
                <input type="submit">
            </p>
        </div>
    </form>
    <iframe style="display: none;" id="guestFrame" name="guestFrame" src="/Account/Blank">
        Your browser does not support inline frames.
    </iframe>
    <script>
        document.getElementById('signin').addEventListener("click", signin, false);
        ///////////////////////////////
        // functions for UI elements
        ///////////////////////////////
        function signin() {
            var loginform = document.getElementById("loginform");
            loginform.submit();
        }

        function onMessage(messageEvent) {
            /*
           messageEvent.origin: Protocol and domain origin of the message
           messageEvent.data: Message itself
           messageEvent.source: Window proxy object, useful to post a response
           */
            document.getElementById("received-message").innerHTML = JSON.stringify(messageEvent);
        }

        var windowProxy;
        window.onload = function () {
            // Create a proxy window to send to and receive
            // messages from the iFrame
            windowProxy = new Porthole.WindowProxy(
                '/Account/iFrameProxy',
                'guestFrame');

            // Register an event handler to receive messages;
            windowProxy.addEventListener(onMessage);
        };


    </script>
</body>
</html>
